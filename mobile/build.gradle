apply plugin: 'com.android.application'

def aria2Version = '1.22.0'
def ownVersion = '0.12'

def props = new Properties()

def propFile
def propName = System.env.MAINTAINER_PROPS
if(propName && (propFile = file(propName)).exists()) {
    new FileInputStream(propFile).withStream { InputStream is ->
        props.load(is)
    }
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    if (props) {
        signingConfigs {
            release {
                storeFile file(props['storeFile'])
                keyAlias props['keyAlias']

                storePassword props['storePassword']
                keyPassword props['keyPassword']
            }
        }
    }

    defaultConfig {
        applicationId 'net.sf.aria2'
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 27 // bump by 3 per release
        versionName "$ownVersion+u.$aria2Version"
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'mips'
            universalApk true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            jniDebuggable true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-common.pro', 'proguard-obfuscate.pro'

            if (props) {
                signingConfig signingConfigs.release
            }
        }
    }

    buildTypes.each {
        it.buildConfigField 'int', 'webuiVer', '1'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//apply plugin: 'me.tatarka.retrolambda'

dependencies {
    //retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:1.8.0'

    // wait until https://github.com/square/leakcanary/issues/156 is resolved
    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'

    api project(':libtermexec')
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'org.jraf:android-switch-backport:1.4.0'
    //api 'com.android.support:preference-v7:23.3.0'

    //noinspection GradleDependency,GradleCompatible
    api 'com.android.support:support-v4:28.0.0'
}

apply from: file("$projectDir/prepare-natives.gradle")

ext.versionCodes = ['armeabi': 0, 'armeabi-v7a': 1, 'x86': 2, 'mips': 3]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        def verAdd = project.versionCodes.get(output.getFilter(OutputFile.ABI))

        if (verAdd)
            output.versionCodeOverride = android.defaultConfig.versionCode + verAdd
    }
}
